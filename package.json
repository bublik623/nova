{
  "name": "nova-frontend",
  "private": true,
  "scripts": {
    "postinstall": "patch-package",
    "adr": "adr-log -d docs/adr -e template.md -i",
    "dev": "nuxi dev --dotenv env/.env.local",
    "dev:test": "nuxi dev --dotenv env/.env.playwright --port 3001",
    "generate": "npm run build:env:test",
    "preview": "nuxt preview",
    "prepare": "husky install",
    "build": "npm run build:env:test",
    "build:env:test": "nuxi generate --dotenv env/.env.test",
    "build:env:pre": "nuxi generate --dotenv env/.env.pre",
    "build:env:int": "nuxi generate --dotenv env/.env.int",
    "build:env:prod": "nuxi generate --dotenv env/.env.prod",
    "build:env:playwright": "nuxi generate --dotenv env/.env.playwright",
    "serve": "npx serve .output/public -p 3001",
    "lint": "npm run stylelint && npm run eslint",
    "eslint": "eslint --ext .js,.ts,vue --ignore-path .gitignore .",
    "eslint:fix": "eslint --ext .js,.ts,vue --ignore-path .gitignore . --fix",
    "stylelint": "stylelint '**/*.{vue,scss}'",
    "test": "npm run test:integration && npm run test:unit:coverage",
    "test:commit": "npm run test:integration:commit && npm run test:unit:coverage",
    "test:unit": "cross-env TZ=UTC vitest run",
    "test:unit:watch": "cross-env TZ=UTC vitest",
    "test:unit:coverage": "cross-env TZ=UTC vitest run --coverage",
    "test:integration": "playwright test",
    "test:integration:commit": "npm-run-all -p -r \"serve --no-request-logging\" \"test:integration\"",
    "test:integration:ui": "playwright test --ui",
    "typescript:check": "vue-tsc --noEmit --project tsconfig.build.json",
    "typescript:check:watch": "vue-tsc --noEmit --watch",
    "get-api:all": "npm-run-all -p 'get-api:!(all)'",
    "get-api:experience-raw": "git archive --remote=ssh://git@ssh.source.tui/dx/offer/content/experience-raw-offer-service.git master api/openapi.yaml | tar -xO > docs/api/experience-raw-offer-service-openapi.yaml",
    "get-api:experience-master-data": "git archive --remote=ssh://git@ssh.source.tui/dx/sourcing/content/suppliers-extranet-platform/experience-master-data-offer-service.git master api/openapi.yaml | tar -xO > docs/api/experience-master-data-offer-service-openapi.yaml",
    "get-api:content-command": "git archive --remote git@ssh.source.tui:dx/offer/content/content-command-offer-service.git master api/openapi.yaml | tar -xO > docs/api/content-command-openapi.yaml",
    "get-api:content-master-data": "git archive --remote git@ssh.source.tui:dx/architecture/open-api-specifications.git master private-api-models/offer-and-sourcing-domain/master-data/product/content-master-data-offer-service-openapi.yaml | tar -x --strip-components=4 -C docs/api",
    "get-api:content-query": "git archive --remote=ssh://git@ssh.source.tui/dx/offer/content/content-query-offer-service.git master api/openapi.yaml | tar -xO > docs/api/content-query-offer-service-openapi.yaml",
    "get-api:content-analytics": "git archive --remote git@ssh.source.tui:dx/architecture/open-api-specifications.git master private-api-models/offer-and-sourcing-domain/content/content-analytics-offer-openapi.yaml | tar -x --strip-components=3 -C docs/api",
    "get-api:metadata-experiences": "git archive --remote ssh://git@ssh.source.tui/dx/sourcing/content/suppliers-extranet-platform/metadata-experience-offer-service.git master api/openapi.yaml | tar -xO > docs/api/metadata-experience-offer-service-openapi.yaml",
    "get-api:offer-service": "git archive --remote=git@ssh.source.tui:dx/offer/content/offer-experience-offer-service.git master api/openapi.yaml | tar -xO > docs/api/offer-openapi.yaml",
    "get-api:inventory-service": "git archive --remote git@ssh.source.tui:dx/architecture/open-api-specifications.git master private-api-models/offer-and-sourcing-domain/offer/inventory-experience-offer-service-openapi.yaml | tar -x --strip-components=3 -C docs/api",
    "get-api:pickup-place": "git archive --remote git@ssh.source.tui:dx/architecture/open-api-specifications.git master private-api-models/offer-and-sourcing-domain/offer/pickup-place-offer-service-openapi.yaml | tar -x --strip-components=3 -C docs/api",
    "get-api:pickup-experience": "git archive --remote git@ssh.source.tui:dx/architecture/open-api-specifications.git master private-api-models/offer-and-sourcing-domain/offer/pickup-experience-offer-service-openapi.yaml | tar -x --strip-components=3 -C docs/api",
    "get-api:dam-service": "git archive --remote git@ssh.source.tui:dx/architecture/open-api-specifications.git master private-api-models/offer-and-sourcing-domain/offer/dam-offer-service.yml | tar -x --strip-components=3 -C docs/api",
    "get-api:geo-master-data": "git archive --remote git@ssh.source.tui:dx/architecture/open-api-specifications.git master private-api-models/offer-and-sourcing-domain/master-data/location/geo-master-data-offer-service-openapi.yaml | tar -x --strip-components=3 -C docs/api",
    "generate:all": "npm-run-all -p 'generate:!(all)'",
    "generate:experience-raw": "npm run get-api:experience-raw && generate-types -s docs/api/experience-raw-offer-service-openapi.yaml -d types/generated/ExperienceRawServiceApi.ts -t TypeScript && prettier --write types/generated/ExperienceRawServiceApi.ts",
    "generate:experience-master-data": "npm run get-api:experience-master-data && generate-types -s docs/api/experience-master-data-offer-service-openapi.yaml -d types/generated/ExperienceMasterDataApi.ts -t TypeScript && prettier --write types/generated/ExperienceMasterDataApi.ts",
    "generate:content-command": "npm run get-api:content-command && generate-types -s docs/api/content-command-openapi.yaml -d types/generated/ContentCommandApi.ts -t TypeScript && prettier --write types/generated/ContentCommandApi.ts",
    "generate:content-master-data": "npm run get-api:content-command && generate-types -s docs/api/content-master-data-offer-service-openapi.yaml -d types/generated/ContentMasterDataApi.ts -t TypeScript && prettier --write types/generated/ContentMasterDataApi.ts",
    "generate:content-query": "npm run get-api:content-query && generate-types -s docs/api/content-query-offer-service-openapi.yaml -d types/generated/ContentQueryApiV2.ts -t TypeScript && prettier --write types/generated/ContentQueryApiV2.ts",
    "generate:content-analytics": "npm run get-api:content-analytics && generate-types -s docs/api/content-analytics-offer-openapi.yaml -d types/generated/ContentAnalyticsApi.ts -t TypeScript && prettier --write types/generated/ContentAnalyticsApi.ts",
    "generate:metadata-experiences": "npm run get-api:metadata-experiences && generate-types -s docs/api/metadata-experience-offer-service-openapi.yaml -d types/generated/MetadataExperiencesApi.ts -t TypeScript && prettier --write types/generated/MetadataExperiencesApi.ts",
    "generate:offer-service": "npm run get-api:offer-service && generate-types -s docs/api/offer-openapi.yaml -d types/generated/OfferServiceApi.ts -t TypeScript && prettier --write types/generated/OfferServiceApi.ts",
    "generate:inventory-service": "npm run get-api:inventory-service && generate-types -s docs/api/inventory-experience-offer-service-openapi.yaml -d types/generated/InventoryServiceApi.ts -t TypeScript && prettier --write types/generated/InventoryServiceApi.ts",
    "generate:pickup-place": "npm run get-api:pickup-place && generate-types -s docs/api/pickup-place-offer-service-openapi.yaml -d types/generated/PickupPlaceServiceApi.ts -t TypeScript && prettier --write types/generated/PickupPlaceServiceApi.ts",
    "generate:pickup-experience": "npm run get-api:pickup-experience && generate-types -s docs/api/pickup-experience-offer-service-openapi.yaml -d types/generated/PickupExperienceServiceApi.ts -t TypeScript && prettier --write types/generated/PickupExperienceServiceApi.ts",
    "generate:dam-service": "npm run get-api:dam-service && generate-types -s docs/api/dam-offer-service.yml -d types/generated/DamServiceApi.ts -t TypeScript && prettier --write types/generated/DamServiceApi.ts",
    "generate:geo-master-data": "npm run get-api:geo-master-data && generate-types -s docs/api/location/geo-master-data-offer-service-openapi.yaml -d types/generated/GeoMasterDataApi.ts -t TypeScript && prettier --write types/generated/GeoMasterDataApi.ts",
    "get-api:contract-master-data": "git archive --remote git@ssh.source.tui:dx/architecture/open-api-specifications.git master private-api-models/offer-and-sourcing-domain/master-data/contract/contract-master-data-openapi.yaml | tar -x --strip-components=4 -C docs/api",
    "generate:contract-master-data": "npm run get-api:contract-master-data && generate-types -s docs/api/contract-master-data-openapi.yaml -d types/generated/ContractMasterDataApi.ts -t TypeScript && prettier --write types/generated/ContractMasterDataApi.ts",
    "get-api:supplier-enrollment": "git archive --remote git@ssh.source.tui:dx/sourcing/content/suppliers-extranet-platform/supplier-enrollment-offer-service.git master api/openapi.yml | tar -x --strip-components=4 -C docs/api",
    "generate:supplier-enrollment": "npm run get-api:supplier-enrollment && generate-types -s docs/api/supplier-enrollment-offer-service-openapi.yaml -d types/generated/SupplierEnrollmentApi.ts -t TypeScript && prettier --write types/generated/SupplierEnrollmentApi.ts"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.0.0",
    "@commitlint/config-conventional": "^19.0.0",
    "@dx/i18n": "^4.3.7",
    "@musement/eslint-plugin": "^3.0.0",
    "@musement/types-generator": "0.0.13",
    "@nuxtjs/tailwindcss": "^6.11.4",
    "@pinia/testing": "0.1.7",
    "@playwright/test": "^1.35.1",
    "@types/diff": "^7.0.0",
    "@types/google.maps": "^3.53.5",
    "@types/lodash.debounce": "^4.0.7",
    "@types/lodash.flow": "^3.5.7",
    "@types/object-assign-deep": "^0.4.3",
    "@typescript-eslint/eslint-plugin": "^5.30.0",
    "@typescript-eslint/parser": "^5.30.0",
    "@vue/test-utils": "^2.4.6",
    "adr-log": "^2.2.0",
    "cross-env": "^7.0.3",
    "dotenv-cli": "^8.0.0",
    "eslint": "^8.15.0",
    "husky": "^9.0.0",
    "jsdom": "^19.0.0",
    "lint-staged": "^12.4.1",
    "lodash.debounce": "^4.0.8",
    "npm-run-all2": "^5.0.0",
    "nuxt": "^3.14.0",
    "patch-package": "^8.0.0",
    "postcss": "^8.4.17",
    "postcss-html": "^1.4.1",
    "prettier": "^2.6.2",
    "sass": "^1.51.0",
    "stylelint": "^14.8.5",
    "stylelint-config-prettier": "^9.0.3",
    "stylelint-config-standard-scss": "^4.0.0",
    "stylelint-config-standard-vue": "^1.0.0",
    "stylelint-selector-bem-pattern": "^2.1.1",
    "typescript": "^5.6.3",
    "unplugin-auto-import": "^0.11.4",
    "vite-svg-loader": "^3.3.0",
    "vitest": "^2.1.4",
    "vue-loader": "^17.2.2",
    "vue-tsc": "^2.1.0"
  },
  "dependencies": {
    "@datadog/browser-rum": "^6.0.0",
    "@donedeal0/superdiff": "^3.1.2",
    "@dx/user-login-library": "^2.4.0",
    "@floating-ui/vue": "^1.0.4",
    "@googlemaps/js-api-loader": "^1.16.2",
    "@hebilicious/vue-query-nuxt": "^0.3.0",
    "@hotjar/browser": "^1.0.7",
    "@musement/iso-duration": "^1.0.0",
    "@pinia/nuxt": "^0.5.0",
    "@rsql/builder": "^1.3.3",
    "@rsql/emitter": "^1.3.3",
    "@tanstack/vue-query": "^5.59.1",
    "@tiptap/core": "^2.0.0-beta.217",
    "@tiptap/extension-bold": "^2.0.0-beta.217",
    "@tiptap/extension-bullet-list": "^2.0.0-beta.217",
    "@tiptap/extension-character-count": "^2.0.0-beta.217",
    "@tiptap/extension-document": "^2.0.0-beta.217",
    "@tiptap/extension-history": "^2.0.0-beta.217",
    "@tiptap/extension-italic": "^2.0.0-beta.217",
    "@tiptap/extension-list-item": "^2.0.0-beta.217",
    "@tiptap/extension-ordered-list": "^2.0.0-beta.217",
    "@tiptap/extension-paragraph": "^2.0.0-beta.217",
    "@tiptap/extension-placeholder": "^2.0.0-beta.217",
    "@tiptap/extension-text": "^2.0.0-beta.217",
    "@tiptap/extension-underline": "^2.0.0-beta.217",
    "@tiptap/pm": "^2.0.0-beta.217",
    "@tiptap/vue-3": "^2.0.0-beta.217",
    "@vitest/coverage-v8": "^2.1.4",
    "@vueuse/components": "^10.9.0",
    "@vueuse/core": "^10.9.0",
    "@vueuse/router": "^10.9.0",
    "attr-accept": "^2.2.2",
    "axios": "^1.8.4",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "configcat-js": "^9.4.0",
    "date-fns": "^4.0.0",
    "deep-object-diff": "^1.1.9",
    "diff": "^5.1.0",
    "dot-path-value": "0.0.10",
    "jwt-decode": "^3.1.2",
    "lodash.flow": "^3.5.0",
    "lucide-vue-next": "^0.488.0",
    "object-assign-deep": "^0.4.0",
    "pinia": "^2.2.6",
    "reka-ui": "^2.2.0",
    "tailwind-merge": "^3.2.0",
    "tailwindcss-animate": "^1.0.7",
    "visual-dom-diff": "^0.7.2",
    "vite-tsconfig-paths": "^4.3.2",
    "vuedraggable": "^4.1.0",
    "zod": "^3.20.2"
  }
}
