openapi: 3.0.2
info:
  title: Pickup Place Offer Service
  description: |
    API Pickup Place Offer Service :
    * Pickup places
      * Management
        - Create new pickup place.
        - Update an existing pickup place.
        - Delete an existing pickup place.
      * Inquiry
        - Retrieve pickup place.
        - Retrieve a pickup place from id.

  version: 1.0.0
  termsOfService: https://tui-dx.com/terms/
  contact:
    name: Contact TUI Content team
    email: content_team@TUIGroup.onmicrosoft.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: https://pickup-place-offer.tui-mm.com
    description: Prod server
  - url: https://pickup-place-offer.pre.tui-mm.com
    description: Pre-Prod server
  - url: https://pickup-place-offer.test.tui-mm.com
    description: Test server
security:
  - bearerAuth: []
tags:
  - name: Pickups places
    description: Management and inquiry places for a pickup.
paths:
  /pickup-places:
    parameters:
      - $ref: "#/components/parameters/acceptVersionParam"
    post:
      tags:
        - Pickups places
      summary: Creates a pickup location .
      description: Creates a pickup location .
      operationId: postPickUpPlace
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/pickupPlace"
      responses:
        "201":
          $ref: "#/components/responses/201"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "406":
          $ref: "#/components/responses/406"
        "409":
          $ref: "#/components/responses/409"
        "500":
          $ref: "#/components/responses/500"
    get:
      tags:
        - Pickups places
      summary: Retrieves the pickups locations.
      description: Retrieves the pickups locations .
      operationId: getPickUpsPlaces
      parameters:
        - $ref: "#/components/parameters/filtersParam"
        - $ref: "#/components/parameters/fieldsParam"
        - $ref: "#/components/parameters/offsetParam"
        - $ref: "#/components/parameters/limitParam"
        - $ref: "#/components/parameters/sortParam"
      responses:
        "200":
          description: OK, pickups locations successfully retrieved.
          headers:
            trace-id:
              $ref: "#/components/headers/trace-id"
          content:
            application/x-ndjson:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/pickupPlace"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "406":
          $ref: "#/components/responses/406"
        "500":
          $ref: "#/components/responses/500"
  /pickup-places/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - $ref: '#/components/parameters/acceptVersionParam'
    get:
      tags:
        - Pickups places
      summary: Get the pickup location by its id .
      description: Get a pickup location by its id .
      operationId: retrievePickPlaceUpByID
      responses:
        "200":
          description: OK - Pickup location successfully retrieved response.
          headers:
            trace-id:
              $ref: "#/components/headers/trace-id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/pickupPlace"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "406":
          $ref: "#/components/responses/406"
        "500":
          $ref: "#/components/responses/500"
    put:
      operationId: updatePickUpPlace
      tags:
        - Pickups places
      summary: Updates the Pick-up location .
      description: Update Pick-up location .
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/pickupPlace"
      responses:
        "204":
          $ref: "#/components/responses/204"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "406":
          $ref: "#/components/responses/406"
        "500":
          $ref: "#/components/responses/500"
    delete:
      operationId: deletePickUpPlace
      tags:
        - Pickups places
      summary: Removes the Pickup location .
      description: Removes Pickup location .
      responses:
        "204":
          $ref: "#/components/responses/204"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "406":
          $ref: "#/components/responses/406"
        "500":
          $ref: "#/components/responses/500"

components:
  schemas:
    error:
      type: object
      required:
        - status
      properties:
        code:
          type: string
          example: GenericApiException
        message:
          type: string
          example: Error message description

    # OBJECTS PICKUP
    pickupPlace:
      type: object
      required:
        - supplier_id
        - name
        - type
        - latitude
        - longitude
        - city
        - address
      #x-event-source: https://source.tui/dx/architecture/tuimm-events/-/blob/master/offer-and-sourcing-domain/offer/event-offer-pickup-place-pickup-place.json
      properties:
        id:
          type: string
          readOnly: true
          format: uuid
          description: Internal unique code given to a new entity
          example: 6ef573e9-e0fc-4185-886b-1b28a64381e9
        supplier_id:
          type: string
          format: uuid
          description: Supplier internal unique code
          example: 7e87fdf3-e96d-4783-9dac-2ecb957cf943
        name:
          type: string
          description: Name given to the entity
          example: Entity name
        type:
          type: string
          description: Type of pickup categorized in the pickup-service-master-data
          enum: [Hotel,Airport,Port,Other]
          example: Hotel
        latitude:
          type: string
          description: Latitude is the measurement of distance north or south of the Equator.
          example: "39.573696612860154"
        longitude:
          type: string
          description: Longitude is the measurement east or west of the prime meridian.
          example: "2.643315064536297"
        city:
          type: string
          description: City name. City may or may not be stored in the master data.
          example: London
        country:
          type: string
          description: Country name. Country may or may not be stored in the master data.
          example: England
        address:
          type: string
          description: Pick-up place address
          example: 10 Downing Street. SW1A 2AA. London. England.
        labels:
          type: array
          items:
            type: string
            description: Pick-up description
            example: "Museum"
        status:
          type: string
          enum: [ACTIVE,INACTIVE,DELETED]
          description: Pick-up place status. Status availables in pickup-master-data
          example: ACTIVE
        created_at:
          type: string
          format: date-time
          description: Creation date-time
          example: "2022-07-14T18:17:21.926Z"
  parameters:
    acceptVersionParam:
      name: accept-version
      in: header
      description: API version
      required: true
      schema:
        type: string
        enum: [vnd.pickup-place-offer-service.v1]
      example: "vnd.pickup-place-offer-service.v1"
    filtersParam:
      name: filters
      in: query
      description: Allow filtering by dynamic parameters using RSQL syntax
      required: false
      schema:
        type: string
      example: ""
    fieldsParam:
      name: fields
      in: query
      description: Allow customize the response recovering only the fields needed. It's a list of fields separated by commas without spaces between them
      required: false
      schema:
        type: string
      example: ""
    limitParam:
      name: limit
      in: query
      description: number items to
      required: false
      schema:
        type: integer
        format: int64
      example: 50
    offsetParam:
      name: offset
      in: query
      description: offset of items
      required: false
      schema:
        type: integer
        format: int64
      example: 0
    sortParam:
      name: sort
      in: query
      description: sort query
      required: false
      schema:
        type: string
      example: ""
  responses:
    '201':
      description: Created - The request was successful.
      headers:
        trace-id:
          $ref: '#/components/headers/trace-id'
        location:
          $ref: '#/components/headers/location'
    '204':
      description: The request was successful.
      headers:
        trace-id:
          $ref: '#/components/headers/trace-id'
    "400":
      description: Bad Request. Inspect the response body for details.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
      headers:
        trace-id:
          $ref: "#/components/headers/trace-id"
    "401":
      description: Unauthorized - The supplied credentials, if any, are not sufficient to access the resource.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
      headers:
        trace-id:
          $ref: "#/components/headers/trace-id"
    "404":
      description: "Resource Not found"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
      headers:
        trace-id:
          $ref: "#/components/headers/trace-id"
    "406":
      description: Not Acceptable - Bad accept version header
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
      headers:
        trace-id:
          $ref: "#/components/headers/trace-id"
    "409":
      description: "Conflict - The request could not be processed because of conflict in the request"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
      headers:
        trace-id:
          $ref: "#/components/headers/trace-id"
    "500":
      description: Internal Server Error. Please try again.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
      headers:
        trace-id:
          $ref: "#/components/headers/trace-id"
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
  headers:
    trace-id:
      description: Used to track the request
      style: simple
      schema:
        type: string
    location:
      description: Slot URI
      schema:
        type: string
        example: "/pickup-places/8ed31c48-09a9-431e-bf32-06c1295ce119"