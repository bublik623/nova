"use strict";
export type Error = { code: string; message?: string };
export type Images = Array<Image>;
export type ImagesV2 = Array<ImageV2>;
export type Videos = Array<Video>;
export type Audios = Array<Audio>;
export type ExperienceContent = {
  experience_id: ExperienceId;
  supplier_id: SupplierId;
  language_code: LanguageCode;
  experience_media?: ExperienceMedia;
  experience_translation?: ExperienceTranslation;
  option_translations?: OptionTranslationArray;
  custom_highlights?: Array<CustomHighlights>;
  custom_included?: Array<CustomIncluded>;
  custom_non_included?: Array<CustomNonIncluded>;
  custom_important_information?: Array<CustomImportantInformation>;
  location?: ExperienceLocation;
  published?: Published;
};
export type DistributionContent = {
  id?: Id;
  supplier_id?: SupplierId;
  global_status?: GlobalStatus;
  experience_content?: Array<ExperienceContentV2>;
  functional_content?: FunctionalContent;
};
export type ExperienceContentV2 = {
  experience_id: ExperienceId;
  supplier_id: SupplierId;
  language_code: LanguageCode;
  experience_media?: ExperienceMediaV2;
  experience_translation?: ExperienceTranslation;
  option_translations?: OptionTranslationArray;
  custom_highlights?: Array<CustomHighlights>;
  custom_included?: Array<CustomIncluded>;
  custom_non_included?: Array<CustomNonIncluded>;
  custom_important_information?: Array<CustomImportantInformation>;
  published?: Published;
};
export type ExperienceMedia = {
  id?: Id;
  images?: Images;
  images_v2?: ImagesV2;
  videos?: Videos;
  audios?: Audios;
  flow_id: FlowId;
  status_id: StatusId;
  creation_date?: CreationDate;
  updated_date?: UpdatedDate;
};
export type ExperienceMediaV2 = {
  id?: Id;
  images?: ImagesV2;
  images_v2: ImagesV2;
  flow_id: FlowId;
  status_id: StatusId;
  distribution_status?: DistributionStatus;
  distribution_date?: DistributionDate;
  creation_date?: CreationDate;
  updated_date?: UpdatedDate;
};
export type ExperienceShortContent = {
  experience_id?: ExperienceId;
  language_code?: LanguageCode;
  title?: Title;
  text2?: ShortDescription;
  cover_image_url?: UrlS3;
  experience_content_complete?: UrlContentComplete;
  distribution_content?: UrlDistributionContent;
  published?: Published;
};
export type ExperienceTranslation = {
  id: Id;
  name: Name;
  title: Title;
  text1?: Description;
  text2?: ShortDescription;
  text3?: MediumDescription;
  info_voucher?: InfoVoucher;
  meeting_point_details?: MeetingPointDetails;
  automatic_translation?: AutomaticTranslation;
  to_be_translated?: ToBeTranslated;
  curation_quality?: CurationQuality;
  flow_id: FlowId;
  status_id: StatusId;
  distribution_status?: DistributionStatus;
  distribution_date?: DistributionDate;
  creation_date?: CreationDate;
  updated_date?: UpdatedDate;
};
export type OptionTranslationArray = Array<OptionTranslation>;
export type OptionTranslation = {
  id: Id;
  code: OptionCode;
  description: OptionDescription;
  automatic_translation?: AutomaticTranslation;
  to_be_translated?: ToBeTranslated;
  creation_date?: CreationDate;
  updated_date?: UpdatedDate;
};
export type Raw = {
  id?: Id;
  experience_id?: string;
  go_commercial?: GoCommercial;
  functional?: FunctionalRaw;
  commercial: CommercialRaw;
  supplier_id?: SupplierId;
  creation_date?: CreationDate;
  updated_date?: UpdatedDate;
};
export type FunctionalRaw = {
  asterix_id?: AsterixId;
  core_id?: CoreId;
  options?: Array<Option>;
  highlights?: Array<string>;
  included?: Array<string>;
  non_included?: Array<string>;
  important_information?: Array<string>;
  additional_services?: Array<string>;
  interests?: Array<string>;
  categories?: Array<string>;
  location?: ExperienceLocation;
};
export type CommercialRaw = {
  title: Title;
  description?: Description;
  info_voucher?: InfoVoucher;
  meeting_point_details?: MeetingPointDetails;
  custom_highlights?: Array<RawCustomHighlights>;
  custom_included?: Array<RawCustomIncluded>;
  custom_non_included?: Array<RawCustomNonIncluded>;
  custom_important_information?: Array<RawCustomImportantInformation>;
};
export type Option = { code: OptionCode; description: string };
export type RawCustomIncluded = {
  code?: string;
  name: string;
  description?: string;
};
export type RawCustomNonIncluded = {
  code?: string;
  name: string;
  description?: string;
};
export type RawCustomHighlights = {
  code?: string;
  name: string;
  description?: string;
};
export type RawCustomImportantInformation = {
  code?: string;
  name: string;
  description?: string;
};
export type CustomIncluded = {
  id: string;
  code?: string;
  name: string;
  description?: string;
  automatic_translation?: AutomaticTranslation;
  to_be_translated?: ToBeTranslated;
  visualization_order?: VisualizationOrder;
  flow_id: FlowId;
  status_id: StatusId;
  creation_date?: CreationDate;
  updated_date?: UpdatedDate;
};
export type CustomNonIncluded = {
  id: string;
  code?: string;
  name?: string;
  description?: string;
  automatic_translation?: AutomaticTranslation;
  to_be_translated?: ToBeTranslated;
  visualization_order?: VisualizationOrder;
  flow_id: FlowId;
  status_id: StatusId;
  creation_date?: CreationDate;
  updated_date?: UpdatedDate;
};
export type CustomHighlights = {
  id: string;
  code?: string;
  name: string;
  description?: string;
  automatic_translation?: AutomaticTranslation;
  to_be_translated?: ToBeTranslated;
  visualization_order?: VisualizationOrder;
  flow_id: FlowId;
  status_id: StatusId;
  creation_date?: CreationDate;
  updated_date?: UpdatedDate;
};
export type CustomImportantInformation = {
  id: string;
  code?: string;
  name: string;
  description?: string;
  automatic_translation?: AutomaticTranslation;
  to_be_translated?: ToBeTranslated;
  visualization_order?: VisualizationOrder;
  flow_id: FlowId;
  status_id: StatusId;
  creation_date?: CreationDate;
  updated_date?: UpdatedDate;
};
export type FunctionalContent = { experience_location?: ExperienceLocation };
export type ExperienceLocation = {
  id?: string;
  option_id?: string;
  latitude?: string;
  longitude?: string;
  altitude?: string;
  address: Address;
  creation_date?: CreationDate;
  updated_date?: UpdatedDate;
};
export type Address = {
  direction?: string;
  city: string;
  postal_code?: string;
  country: string;
};
export type GoCommercial = boolean;
export type Id = string;
export type CopyrightId = string;
export type StatusId = string;
export type FlowId = string;
export type AsterixId = string;
export type CoreId = string;
export type CreationDate = string;
export type UpdatedDate = string;
export type DistributionDate = string;
export type DistributionStatus = "READY" | "NOT_READY" | "SENT" | "UNPUBLISHED";
export type GlobalStatus = "PUBLISHED" | "UNPUBLISHED" | "PENDING";
export type UrlS3 = string;
export type UrlContentComplete = string;
export type UrlDistributionContent = string;
export type Description = string;
export type ShortDescription = string;
export type MediumDescription = string;
export type Title = string;
export type InfoVoucher = string;
export type MeetingPointDetails = string;
export type AutomaticTranslation = boolean;
export type ToBeTranslated = boolean;
export type CurationQuality = boolean;
export type LanguageCode = string;
export type EmbedCode = string;
export type Player = string;
export type Duration = number;
export type Width = number;
export type Height = number;
export type Size = "SMALL" | "MEDIUM" | "BIG" | "EXTRA_LARGE" | "LPP" | "DYNAMIC";
export type MediaType = string;
export type IsCover = boolean;
export type SupplierId = string;
export type ExperienceId = string;
export type FileName = string;
export type PreviewUrl = string;
export type VisualizationOrder = number;
export type ImageType = string;
export type Name = string;
export type Published = boolean;
export type OptionCode = string;
export type OptionDescription = string;
export type ImageV2 = {
  id: Id;
  file_name?: FileName;
  preview_url: PreviewUrl;
  visualization_order: VisualizationOrder;
  image_type: ImageType;
};
export type Image = Media & {};
export type Audio = Media & ExperienceAudiosExtension & {};
export type Video = Media & ExperienceVideosExtension & {};
export type Media = {
  id: Id;
  name: Name;
  media_type: MediaType;
  url?: UrlS3;
  width?: Width;
  height?: Height;
  size?: Size;
  visualization_order?: VisualizationOrder;
  is_cover?: IsCover;
  copyright_id?: CopyrightId;
  flow_id: FlowId;
  status_id: StatusId;
  creation_date?: CreationDate;
  updated_date?: UpdatedDate;
};
export type ExperienceAudiosExtension = {
  duration?: Duration;
  player?: Player;
};
export type ExperienceVideosExtension = {
  duration?: Duration;
  embed_code?: EmbedCode;
};
